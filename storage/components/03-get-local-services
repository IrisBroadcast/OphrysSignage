#!/bin/bash

COMMONFILE=/usr/local/aloe/scripts/common.sh
. $COMMONFILE

COMP_NAME="$0"
COMP_MESSAGE="Getting and activating local services"

function getUpdateService
{
	# This service is only used if the ophrys client is managed by aloemanager (MQTT)
	if [ $MQTT_ENABLE == true ];then
	COMPONENT=aloeupdate.service
	DEST="/etc/systemd/system/$COMPONENT"
	URLEND="prov/get/update/component?Component=$COMPONENT&Type=$TYPE&Version=$VERSION"
	SRC="$HOSTURL$URLEND"

	curling ${SRC} ${TMPFILE}
	verifyDownloadedFile ${TMPFILE}
		if [ $? -eq 0 ];then
			mv ${TMPFILE} ${DEST}
			systemctl daemon-reload &>> $INSTALL_LOG
			systemctl enable /etc/systemd/system/$COMPONENT &>> $INSTALL_LOG
		else
			FUNC_NAME="${FUNCNAME[0]}"
			FUNC_SUCCESS=false
			FUNC_MESSAGE="Will not continue due to error in downloaded file - ${COMPONENT}"
			functionInfo
			return 1
		fi
	fi
}

function getCheckIpService
{
	# A service that will wait for a valid IPv4 adress before launching Ophrys Signage
	COMPONENT=aloe_checkip.service
	DEST="/etc/systemd/system/$COMPONENT"
	if [ $MQTT_ENABLE == true ];then
		URLEND="prov/get/update/component?Component=$COMPONENT&Type=$TYPE&Version=$VERSION"
		SRC="$HOSTURL$URLEND"

		curling ${SRC} ${TMPFILE}
		verifyDownloadedFile ${TMPFILE}
		if [ $? -eq 0 ];then
			mv ${TMPFILE} ${DEST}
			systemctl daemon-reload &>> $INSTALL_LOG
			systemctl enable /etc/systemd/system/$COMPONENT &>> $INSTALL_LOG
		else
			FUNC_NAME="${FUNCNAME[0]}"
			FUNC_SUCCESS=false
			FUNC_MESSAGE="Will not continue due to error in downloaded file - ${COMPONENT}"
			functionInfo
			return 1
		fi
	else
		cp $STORAGEFOLDER/services/$COMPONENT $DEST
		systemctl daemon-reload &>> $INSTALL_LOG
		systemctl enable /etc/systemd/system/$COMPONENT &>> $INSTALL_LOG
	fi
}

function getDisplayWebpageService
{
	COMPONENT=ophrys_displaywebpage.service
	DEST="/etc/systemd/system/$COMPONENT"
    if [ $MQTT_ENABLE == true ];then
		URLEND="prov/get/update/component?Component=$COMPONENT&Type=$TYPE&Version=$VERSION"
		SRC="$HOSTURL$URLEND"

		curling ${SRC} ${TMPFILE}
		verifyDownloadedFile ${TMPFILE}
		if [ $? -eq 0 ];then
			mv ${TMPFILE} ${DEST}
			systemctl daemon-reload &>> $INSTALL_LOG
			systemctl enable /etc/systemd/system/$COMPONENT &>> $INSTALL_LOG
		else
			FUNC_NAME="${FUNCNAME[0]}"
			FUNC_SUCCESS=false
			FUNC_MESSAGE="Will not continue due to error in downloaded file - ${COMPONENT}"
			functionInfo
			return 1
		fi
	else
		cp $STORAGEFOLDER/services/$COMPONENT $DEST
		systemctl daemon-reload &>> $INSTALL_LOG
		systemctl enable /etc/systemd/system/$COMPONENT &>> $INSTALL_LOG
	fi
}

function getOprhysSignageService
{
	COMPONENT=ophrys_signage.service
	DEST="/etc/systemd/system/$COMPONENT"
	if [ $MQTT_ENABLE == true ];then
		URLEND="prov/get/update/component?Component=$COMPONENT&Type=$TYPE&Version=$VERSION"
		SRC="$HOSTURL$URLEND"

		curling ${SRC} ${TMPFILE}
		verifyDownloadedFile ${TMPFILE}
		if [ $? -eq 0 ];then
			mv ${TMPFILE} ${DEST}
			systemctl daemon-reload &>> $INSTALL_LOG
			systemctl enable /etc/systemd/system/$COMPONENT &>> $INSTALL_LOG
		else
			FUNC_NAME="${FUNCNAME[0]}"
			FUNC_SUCCESS=false
			FUNC_MESSAGE="Will not continue due to error in downloaded file - ${COMPONENT}"
			functionInfo
			return 1
		fi
	else
		cp $STORAGEFOLDER/services/$COMPONENT $DEST
		systemctl daemon-reload &>> $INSTALL_LOG
		systemctl enable /etc/systemd/system/$COMPONENT &>> $INSTALL_LOG
	fi
}

componentInfo
getUpdateService || COMP_SUCCESS=false
getCheckIpService || COMP_SUCCESS=false
getDisplayWebpageService || COMP_SUCCESS=false
getOprhysSignageService || COMP_SUCCESS=false
reportResult